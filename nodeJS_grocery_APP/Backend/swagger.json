{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Grocery App API",
      "description": "API documentation for the Grocery App Backend."
    },
    "host": "localhost:4000",
    "basePath": "/api",
    "schemes": ["http"],
    "paths": {
      "/categories": {
        "post": {
          "summary": "Create a new category",
          "description": "Upload a new category with an image.",
          "consumes": ["multipart/form-data"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "formData",
              "name": "categoryName",
              "type": "string",
              "required": true,
              "description": "The name of the category."
            },
            {
              "in": "formData",
              "name": "categoryDescription",
              "type": "string",
              "required": true,
              "description": "The description of the category."
            },
            {
              "in": "formData",
              "name": "categoryImage",
              "type": "file",
              "required": true,
              "description": "The image file for the category (jpg, jpeg, png, max 1MB)."
            }
          ],
          "responses": {
            "200": {
              "description": "Category created successfully.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" },
                  "data": { "type": "object" }
                }
              }
            },
            "400": {
              "description": "Validation error.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Get a list of categories",
          "parameters": [
            {
              "in": "query",
              "name": "categoryName",
              "type": "string",
              "description": "Filter categories by name."
            },
            {
              "in": "query",
              "name": "pageSize",
              "type": "integer",
              "description": "The number of items per page."
            },
            {
              "in": "query",
              "name": "page",
              "type": "integer",
              "description": "The page number."
            }
          ],
          "responses": {
            "200": {
              "description": "List of categories returned successfully.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" },
                  "data": { "type": "object" }
                }
              }
            }
          }
        }
      },
      "/categories/{id}": {
        "get": {
          "summary": "Get a category by ID",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "The ID of the category."
            }
          ],
          "responses": {
            "200": {
              "description": "Category details returned successfully.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" },
                  "data": { "type": "object" }
                }
              }
            },
            "404": {
              "description": "Category not found.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a category",
          "consumes": ["multipart/form-data"],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "The ID of the category to update."
            },
            {
              "in": "formData",
              "name": "categoryName",
              "type": "string",
              "description": "The new name of the category."
            },
            {
              "in": "formData",
              "name": "categoryDescription",
              "type": "string",
              "description": "The new description of the category."
            },
            {
              "in": "formData",
              "name": "categoryImage",
              "type": "file",
              "description": "The new image file for the category (jpg, jpeg, png, max 1MB)."
            }
          ],
          "responses": {
            "200": {
              "description": "Category updated successfully.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            },
            "404": {
              "description": "Category not found.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete a category",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "type": "string",
              "required": true,
              "description": "The ID of the category to delete."
            }
          ],
          "responses": {
            "200": {
              "description": "Category deleted successfully.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            },
            "404": {
              "description": "Category not found.",
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" }
                }
              }
            }
          }
        }
      }
    }
  }
  